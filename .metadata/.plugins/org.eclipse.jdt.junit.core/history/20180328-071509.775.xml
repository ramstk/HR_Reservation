<?xml version="1.0" encoding="UTF-8"?><testrun name="ReservationRepositoryTest" project="hr_reservation" tests="12" started="12" failures="0" errors="1" ignored="0">
  <testsuite name="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0">
    <testcase name="testFindAllWithNoExistingReservationsEnsureNoReservationsFound" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindExistingReservationEnsureCorrectReservationValues" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testUpdateExistingReservationWithNullUpdatedReservationEnsureNoUpdateMade" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindExistingReservationEnsureOptionalIsPresent" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testUpdateNonexistentReservationEnsureNoUpdateMade" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindAllWithTwoExistingReservationEnsureSecondReservationIsCorrect" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindAllWithOneExistingReservationsEnsureOneReservationsFound" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindAllWithTwoExistingReservationsEnsureTwoReservationsFound" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testFindAllWithTwoExistingReservationEnsureFirstReservationIsCorrect" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testUpdateExistingReservationEnsureUpdateMade" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0">
      <error>java.lang.NullPointerException
	at java.util.Date.getMillisOf(Date.java:958)
	at java.util.Date.before(Date.java:917)
	at com.solution.keypr.domain.Reservation.Rstatus(Reservation.java:94)
	at com.solution.keypr.repository.ReservationRepo.updateIfExists(ReservationRepo.java:20)
	at com.solution.keypr.repository.ReservationRepo.updateIfExists(ReservationRepo.java:1)
	at com.solution.keypr.repository.DataRepository.lambda$1(DataRepository.java:54)
	at com.solution.keypr.repository.DataRepository$$Lambda$281/1939869193.accept(Unknown Source)
	at java.util.Optional.ifPresent(Optional.java:159)
	at com.solution.keypr.repository.DataRepository.update(DataRepository.java:54)
	at com.solution.keypr.test.unit.ReservationRepositoryTest.testUpdateExistingReservationEnsureUpdateMade(ReservationRepositoryTest.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)
	at org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:539)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:761)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:461)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:207)

</error>
    </testcase>
    <testcase name="testFindNonexistentReservationEnsureOptionalIsNotPresent" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
    <testcase name="testUpdateExistingReservationEnsureOriginalReservationIsUpdated" classname="com.solution.keypr.test.unit.ReservationRepositoryTest" time="0.0"/>
  </testsuite>
</testrun>
